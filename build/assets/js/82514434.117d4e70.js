"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[6542],{3419:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=t(4848),o=t(8453);const r={},s="ClipEdgesCreationConfig",l={id:"api/@thatopen/components-front/interfaces/ClipEdgesCreationConfig",title:"ClipEdgesCreationConfig",description:"Configuration for creating ClipEdges.",source:"@site/docs/api/@thatopen/components-front/interfaces/ClipEdgesCreationConfig.md",sourceDirName:"api/@thatopen/components-front/interfaces",slug:"/api/@thatopen/components-front/interfaces/ClipEdgesCreationConfig",permalink:"/api/@thatopen/components-front/interfaces/ClipEdgesCreationConfig",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"RendererWith2D",permalink:"/api/@thatopen/components-front/classes/RendererWith2D"},next:{title:"ClipEdgesItemStyle",permalink:"/api/@thatopen/components-front/interfaces/ClipEdgesItemStyle"}},d={},c=[{value:"Properties",id:"properties",level:2},{value:"id?",id:"id",level:3},{value:"items?",id:"items",level:3},{value:"link?",id:"link",level:3},{value:"world?",id:"world",level:3}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"clipedgescreationconfig",children:"ClipEdgesCreationConfig"}),"\n",(0,i.jsx)(n.p,{children:"Configuration for creating ClipEdges."}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(n.h3,{id:"id",children:"id?"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"optional"})," ",(0,i.jsx)(n.strong,{children:"id"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The unique name of the ClipEdges."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"items",children:"items?"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"optional"})," ",(0,i.jsx)(n.strong,{children:"items"}),": ",(0,i.jsx)(n.code,{children:"Record"}),"<",(0,i.jsx)(n.code,{children:"string"}),", ",(0,i.jsx)(n.a,{href:"/api/@thatopen/components-front/interfaces/ClipEdgesItemStyle",children:(0,i.jsx)(n.code,{children:"ClipEdgesItemStyle"})}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"A record of groups from the classifier to style based on the style name set."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"link",children:"link?"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"optional"})," ",(0,i.jsx)(n.strong,{children:"link"}),": ",(0,i.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"If true, updates the ClipEdges based on the plane update."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"world",children:"world?"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"optional"})," ",(0,i.jsx)(n.strong,{children:"world"}),": ",(0,i.jsx)(n.code,{children:"World"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The world in which the ClipEdges are going to be added."})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(6540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);