"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[8493],{5450:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>a});var t=o(4848),r=o(8453);const s={},i="CreateViewFromIfcStoreysConfig",c={id:"api/@thatopen/components/interfaces/CreateViewFromIfcStoreysConfig",title:"CreateViewFromIfcStoreysConfig",description:"Configuration options for creating a view from IFC storeys.",source:"@site/docs/api/@thatopen/components/interfaces/CreateViewFromIfcStoreysConfig.md",sourceDirName:"api/@thatopen/components/interfaces",slug:"/api/@thatopen/components/interfaces/CreateViewFromIfcStoreysConfig",permalink:"/api/@thatopen/components/interfaces/CreateViewFromIfcStoreysConfig",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CreateViewConfig",permalink:"/api/@thatopen/components/interfaces/CreateViewConfig"},next:{title:"Createable",permalink:"/api/@thatopen/components/interfaces/Createable"}},l={},a=[{value:"Properties",id:"properties",level:2},{value:"modelIds?",id:"modelids",level:3},{value:"offset?",id:"offset",level:3},{value:"storeyNames?",id:"storeynames",level:3},{value:"world?",id:"world",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"createviewfromifcstoreysconfig",children:"CreateViewFromIfcStoreysConfig"}),"\n",(0,t.jsx)(n.p,{children:"Configuration options for creating a view from IFC storeys."}),"\n",(0,t.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(n.h3,{id:"modelids",children:"modelIds?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"modelIds"}),": ",(0,t.jsx)(n.code,{children:"RegExp"}),"[]"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"An optional array of regular expressions to match model IDs. If not provided, all models will be used."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"offset",children:"offset?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"offset"}),": ",(0,t.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["An optional offset value to displace the storey plane upward. Defaults to ",(0,t.jsx)(n.code,{children:"0.25"}),"."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"storeynames",children:"storeyNames?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"storeyNames"}),": ",(0,t.jsx)(n.code,{children:"RegExp"}),"[]"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"An optional array of regular expressions to match storey names. If not provided, all storeys will be used."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"world",children:"world?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"world"}),": ",(0,t.jsx)(n.a,{href:"/api/@thatopen/components/interfaces/World",children:(0,t.jsx)(n.code,{children:"World"})})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Optional world instance to use when creating the view. If not set, the component's default world will be used."})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>c});var t=o(6540);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);