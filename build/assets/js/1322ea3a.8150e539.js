"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[9905],{2999:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var s=n(4848),r=n(8453);const i={},o="@thatopen/components-front",l={id:"api/@thatopen/components-front/index",title:"@thatopen/components-front",description:"Classes",source:"@site/docs/api/@thatopen/components-front/index.md",sourceDirName:"api/@thatopen/components-front",slug:"/api/@thatopen/components-front/",permalink:"/api/@thatopen/components-front/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ViewpointPerspectiveCamera",permalink:"/api/@thatopen/components/type-aliases/ViewpointPerspectiveCamera"},next:{title:"AreaMeasurement",permalink:"/api/@thatopen/components-front/classes/AreaMeasurement"}},a={},c=[{value:"Classes",id:"classes",level:2},{value:"Interfaces",id:"interfaces",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"thatopencomponents-front",children:"@thatopen/components-front"}),"\n",(0,s.jsx)(t.h2,{id:"classes",children:"Classes"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Class"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/AreaMeasurement",children:"AreaMeasurement"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["AreaMeasurement allows users to measure and interact with areas in a 3D environment. This class provides functionality for creating, updating, and deleting area measurements, as well as managing their visual representation. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/AreaMeasurement",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/AreaMeasurement",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/CivilCrossSectionNavigator",children:"CivilCrossSectionNavigator"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This component is used to navigate and visualize cross sections of a 3D model. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/CivilNavigators",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/CivilCrossSectionNavigator",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/CivilNavigators",children:"CivilNavigators"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This component provides functionality for navigating and interacting with civil engineering data in a 3D environment. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/CivilNavigators",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/CivilNavigators",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/CivilRaycaster",children:"CivilRaycaster"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This component provides functionality for navigating and interacting with civil engineering data in a 3D environment. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/CivilNavigators",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/CivilRaycaster",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/ClipEdges",children:"ClipEdges"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"ClipEdges"})," class is responsible for managing and rendering clipped edges and fills in a ThreeJS scene based on specified styles and models. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/ClipStyler",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/ClipEdges",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/ClipStyler",children:"ClipStyler"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["A component that can style Clipping Planes by adding edges and fills. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/ClipStyler",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/ClipStyler",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/DimensionLine",children:"DimensionLine"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"A class representing a simple dimension line in a 3D space."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/GraphicVertexPicker",children:"GraphicVertexPicker"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"A class to provide a graphical marker for picking vertices in a 3D scene."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/Highlighter",children:"Highlighter"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This component allows highlighting and selecting fragments in a 3D scene. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/Highlighter",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/Highlighter",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/Hoverer",children:"Hoverer"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Hoverer"})," class is responsible for managing hover effects on 3D objects within a scene. It supports animations for fading in and out hover effects and manages the lifecycle of associated 3D meshes. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/Hoverer",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/Hoverer",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/LengthMeasurement",children:"LengthMeasurement"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["A basic dimension tool to measure distances between 2 points in 3D and display a 3D symbol displaying the numeric value. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/LengthMeasurement",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/LengthMeasurement",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/Mark",children:"Mark"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Represents a marker in the 3D world."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/Marker",children:"Marker"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Component for Managing Markers along with creating different types of markers. Every marker is a Simple2DMarker. For every marker that needs to be added, you can use the Manager to add the marker and change its look and feel. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/Marker",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen-platform/components-beta-front/classes/Marker",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/Measurement",children:"Measurement"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Abstract class that gives the core elements to create any measurement component. \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/Measurement",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/Mesher",children:"Mesher"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Mesher is a class that manages the creation and removal of THREE.Mesh objects from fragment data. It allows to efficiently retrieve and remove meshes for specific model items. \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/Mesher",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/Outliner",children:"Outliner"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["This component allows adding a colored outline with thickness to fragments in a 3D scene. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/Outliner",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/Outliner",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/PostproductionRenderer",children:"PostproductionRenderer"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["A class that extends RendererWith2D and adds post-processing capabilities. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/PostproductionRenderer",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/PostproductionRenderer",children:"API"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/RendererWith2D",children:"RendererWith2D"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["A basic renderer capable of rendering 3D and 2D objects (",(0,s.jsx)(t.a,{href:"https://threejs.org/docs/#api/en/core/Object3D",children:"Objec3Ds"})," and ",(0,s.jsx)(t.a,{href:"https://threejs.org/docs/#examples/en/renderers/CSS2DRenderer",children:"CSS2DObjects"})," respectively)."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/classes/VolumeMeasurement",children:"VolumeMeasurement"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["A basic dimension tool to measure volumes and display a 3D symbol with the numeric value. \ud83d\udcd5 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/VolumeMeasurement",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(t.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/VolumeMeasurement",children:"API"}),"."]})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"interfaces",children:"Interfaces"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Interface"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/interfaces/ClipEdgesCreationConfig",children:"ClipEdgesCreationConfig"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Configuration for creating ClipEdges."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/interfaces/ClipEdgesItemStyle",children:"ClipEdgesItemStyle"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Represents the style configuration for clip edges items."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/interfaces/ClipStyle",children:"ClipStyle"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Represents the style configuration for clipping edges, including materials for lines and fills."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/interfaces/DimensionData",children:"DimensionData"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Interface representing the data required to create a dimension line."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/interfaces/HighlightEvents",children:"HighlightEvents"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Interface defining the events that the Highlighter class can trigger. Each highlighter has its own set of events, identified by the highlighter name."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/interfaces/HighlighterConfig",children:"HighlighterConfig"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Interface defining the configuration options for the Highlighter class."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/interfaces/IGroupedMarkers",children:"IGroupedMarkers"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Interface representing a group of markers."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/api/@thatopen/components-front/interfaces/IMarker",children:"IMarker"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Interface representing a marker object."})]})]})]})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var s=n(6540);const r={},i=s.createContext(r);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);