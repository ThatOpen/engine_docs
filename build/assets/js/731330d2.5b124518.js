"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[4038],{1061:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>a,frontMatter:()=>t,metadata:()=>d,toc:()=>o});var s=i(4848),l=i(8453);const t={},r="ClipStyler",d={id:"api/@thatopen/components-front/classes/ClipStyler",title:"ClipStyler",description:"A component that can style Clipping Planes by adding edges and fills. \ud83d\udcd5 Tutorial. \ud83d\udcd8 API.",source:"@site/docs/api/@thatopen/components-front/classes/ClipStyler.md",sourceDirName:"api/@thatopen/components-front/classes",slug:"/api/@thatopen/components-front/classes/ClipStyler",permalink:"/api/@thatopen/components-front/classes/ClipStyler",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ClipEdges",permalink:"/api/@thatopen/components-front/classes/ClipEdges"},next:{title:"DimensionLine",permalink:"/api/@thatopen/components-front/classes/DimensionLine"}},c={},o=[{value:"Extends",id:"extends",level:2},{value:"Implements",id:"implements",level:2},{value:"Properties",id:"properties",level:2},{value:"enabled",id:"enabled",level:3},{value:"Overrides",id:"overrides",level:4},{value:"onDisposed",id:"ondisposed",level:3},{value:"Implementation of",id:"implementation-of",level:4},{value:"world",id:"world",level:3},{value:"uuid",id:"uuid",level:3},{value:"Accessors",id:"accessors",level:2},{value:"visible",id:"visible",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"create()",id:"create",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Remarks",id:"remarks",level:4},{value:"createFromClipping()",id:"createfromclipping",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Remarks",id:"remarks-1",level:4},{value:"createFromView()",id:"createfromview",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"dispose()",id:"dispose",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Implementation of",id:"implementation-of-1",level:4}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"clipstyler",children:"ClipStyler"}),"\n",(0,s.jsxs)(n.p,{children:["A component that can style Clipping Planes by adding edges and fills. \ud83d\udcd5 ",(0,s.jsx)(n.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/ClipStyler",children:"Tutorial"}),". \ud83d\udcd8 ",(0,s.jsx)(n.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/ClipStyler",children:"API"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"extends",children:"Extends"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Component"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"implements",children:"Implements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Disposable_2"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"enabled",children:"enabled"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"enabled"}),": ",(0,s.jsx)(n.code,{children:"boolean"})," = ",(0,s.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"OBC.Component.enabled"}),"\n",(0,s.jsx)(n.h4,{id:"overrides",children:"Overrides"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"OBC.Component.enabled"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"ondisposed",children:"onDisposed"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.strong,{children:"onDisposed"}),": ",(0,s.jsx)(n.code,{children:"Event_2"}),"<",(0,s.jsx)(n.code,{children:"unknown"}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"OBC.Disposable.onDisposed"}),"\n",(0,s.jsx)(n.h4,{id:"implementation-of",children:"Implementation of"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"OBC.Disposable.onDisposed"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"world",children:"world"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"world"}),": ",(0,s.jsx)(n.code,{children:"null"})," | ",(0,s.jsx)(n.code,{children:"World"})," = ",(0,s.jsx)(n.code,{children:"null"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Represents the current world instance used by the ClipStyler.\r\nThis can be an instance of ",(0,s.jsx)(n.code,{children:"OBC.World"})," or ",(0,s.jsx)(n.code,{children:"null"})," if no world is set.\r\nYou can still specify other world during the ClipEdges creation."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"uuid",children:"uuid"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"static"})," ",(0,s.jsx)(n.code,{children:"readonly"})," ",(0,s.jsx)(n.strong,{children:"uuid"}),": ",(0,s.jsx)(n.code,{children:'"24dfc306-a3c4-410f-8071-babc4afa5e4d"'})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A unique identifier for the component.\r\nThis UUID is used to register the component within the Components system."}),"\n",(0,s.jsx)(n.h2,{id:"accessors",children:"Accessors"}),"\n",(0,s.jsx)(n.h3,{id:"visible",children:"visible"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"get"})," ",(0,s.jsx)(n.strong,{children:"visible"}),"(): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gets the visibility state of the edges."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"set"})," ",(0,s.jsx)(n.strong,{children:"visible"}),"(",(0,s.jsx)(n.code,{children:"active"}),"): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Sets the visibility state of the edges."}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"active"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The new visibility state."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"create",children:"create()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"create"}),"(",(0,s.jsx)(n.code,{children:"plane"}),", ",(0,s.jsx)(n.code,{children:"config"}),"?): ",(0,s.jsx)(n.a,{href:"/api/@thatopen/components-front/classes/ClipEdges",children:(0,s.jsx)(n.code,{children:"ClipEdges"})})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Creates a new instance of ",(0,s.jsx)(n.code,{children:"ClipEdges"})," using the specified plane and optional configuration."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"plane"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Plane"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(n.code,{children:"THREE.Plane"})," object used to define the clipping plane."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"config"}),"?"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"/api/@thatopen/components-front/interfaces/ClipEdgesCreationConfig",children:(0,s.jsx)(n.code,{children:"ClipEdgesCreationConfig"})})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Optional configuration for the edges creation."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/api/@thatopen/components-front/classes/ClipEdges",children:(0,s.jsx)(n.code,{children:"ClipEdges"})})}),"\n",(0,s.jsxs)(n.p,{children:["A new instance of ",(0,s.jsx)(n.code,{children:"ClipEdges"})," initialized with the specified plane and configuration."]}),"\n",(0,s.jsx)(n.h4,{id:"remarks",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"The given plane won't be copied during the ClipEdges creation."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"createfromclipping",children:"createFromClipping()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"createFromClipping"}),"(",(0,s.jsx)(n.code,{children:"id"}),", ",(0,s.jsx)(n.code,{children:"config"}),"?): ",(0,s.jsx)(n.a,{href:"/api/@thatopen/components-front/classes/ClipEdges",children:(0,s.jsx)(n.code,{children:"ClipEdges"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Creates and returns styled edges from a clipping plane identified by its ID.\r\nOptionally, a configuration object can be provided to customize the creation process."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"id"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The unique identifier of the clipping plane to create edges from."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"config"}),"?"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"/api/@thatopen/components-front/interfaces/ClipEdgesCreationConfig",children:(0,s.jsx)(n.code,{children:"ClipEdgesCreationConfig"})})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Optional configuration for edge creation, including visibility and linking behavior."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/api/@thatopen/components-front/classes/ClipEdges",children:(0,s.jsx)(n.code,{children:"ClipEdges"})})}),"\n",(0,s.jsx)(n.p,{children:"The created edges styled from the clipping plane."}),"\n",(0,s.jsx)(n.h4,{id:"remarks-1",children:"Remarks"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"config.link"})," is ",(0,s.jsx)(n.code,{children:"true"})," (default), the edges will automatically update when the clipping plane's dragging ends\r\nand will be disposed of when the clipping plane is disposed."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"createfromview",children:"createFromView()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"createFromView"}),"(",(0,s.jsx)(n.code,{children:"view"}),", ",(0,s.jsx)(n.code,{children:"config"}),"?): ",(0,s.jsx)(n.a,{href:"/api/@thatopen/components-front/classes/ClipEdges",children:(0,s.jsx)(n.code,{children:"ClipEdges"})})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Creates and configures clip edges from a given view."}),"\n",(0,s.jsxs)(n.p,{children:["This method generates clip edges based on the provided view's plane and optional configuration.\r\nIf the ",(0,s.jsx)(n.code,{children:"link"})," option in the configuration is enabled (default is ",(0,s.jsx)(n.code,{children:"true"}),"), the clip edges are\r\ndynamically linked to the view's lifecycle events, ensuring proper disposal, updates, and visibility\r\nsynchronization with the view's state."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"view"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"View"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The view object from which the clip edges are created."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"config"}),"?"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"/api/@thatopen/components-front/interfaces/ClipEdgesCreationConfig",children:(0,s.jsx)(n.code,{children:"ClipEdgesCreationConfig"})})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Optional configuration for clip edge creation."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/api/@thatopen/components-front/classes/ClipEdges",children:(0,s.jsx)(n.code,{children:"ClipEdges"})})}),"\n",(0,s.jsx)(n.p,{children:"The created clip edges object, configured and optionally linked to the view's lifecycle."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"dispose",children:"dispose()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"dispose"}),"(): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"OBC.Disposable.dispose"}),"\n",(0,s.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h4,{id:"implementation-of-1",children:"Implementation of"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"OBC.Disposable.dispose"})})]})}function a(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>d});var s=i(6540);const l={},t=s.createContext(l);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);