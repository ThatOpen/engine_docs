"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1613],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),h=o,d=m["".concat(l,".").concat(h)]||m[h]||u[h]||r;return n?a.createElement(d,i(i({ref:t},c),{},{components:n})):a.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5210:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const r={},i=void 0,s={unversionedId:"Tutorials/SimpleScene",id:"Tutorials/SimpleScene",title:"SimpleScene",description:"\ud83c\udf0d Let's create a 3D world!",source:"@site/docs/Tutorials/SimpleScene.mdx",sourceDirName:"Tutorials",slug:"/Tutorials/SimpleScene",permalink:"/docs/Tutorials/SimpleScene",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SimpleRaycaster",permalink:"/docs/Tutorials/SimpleRaycaster"},next:{title:"ToolsComponent",permalink:"/docs/Tutorials/ToolsComponent"}},l={},p=[{value:"\ud83c\udf0d Let&#39;s create a 3D world!",id:"-lets-create-a-3d-world",level:3},{value:"\ud83e\uddf0 Setting up a components project",id:"-setting-up-a-components-project",level:3},{value:"\ud83c\udfa5 Adjusting scene and camera",id:"-adjusting-scene-and-camera",level:3},{value:"\ud83c\udfc0 Adding some 3D objects",id:"-adding-some-3d-objects",level:3},{value:"\ud83d\udd26 Lighting things up",id:"-lighting-things-up",level:3},{value:"\ud83e\uddf9 Cleaning up",id:"-cleaning-up",level:3}],c={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"-lets-create-a-3d-world"},"\ud83c\udf0d Let's create a 3D world!"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"SimpleScene")," component is the easiest way to create a 3D space to start working.\nLet's start by importing Components and Three.js:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import * as THREE from 'three';\nimport * as OBC from 'openbim-components';\n")),(0,o.kt)("p",null,"Now, the first step is getting a container for our viewer. \ud83d\udce6\nThis is just a place where the 3D scene will be rendered.\nIn this example we have just added an HTML ",(0,o.kt)("inlineCode",{parentName:"p"},"div")," element with\nthe ID ",(0,o.kt)("inlineCode",{parentName:"p"},'"container"'),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const container = document.getElementById('container');\n")),(0,o.kt)("p",null,"Now, let's create an awesome 3D scene inside that HTML element! \ud83d\udd25"),(0,o.kt)("admonition",{title:"Are you using a library/framework like React, Angular or vue?",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Then probably you have other mechanisms for getting a reference to the\nHTML div element. However you do it, as long as you get a reference\nin your code, you are good to go!")),(0,o.kt)("h3",{id:"-setting-up-a-components-project"},"\ud83e\uddf0 Setting up a components project"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Next, we will instantiate the main object of the library: ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"../api/classes/components.Components"},"Components")),". \ud83e\udd16\nThis object will keep track of all the components that you create, making them\neasily accessible in all your application and making sure to update them\nin each frame, so you don't have to worry about that. \ud83d\udcaa"),(0,o.kt)("admonition",{title:"The minimum components application",type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"Any components app needs 4 things to work:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"\ud83c\udf0d A ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"../api/classes/components.SimpleScene"},"scene component"))," where our objects will live in 3D."),(0,o.kt)("li",{parentName:"ul"},"\u231a A ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"../api/classes/components.SimpleRenderer"},"renderer component"))," that allows us to see things moving around."),(0,o.kt)("li",{parentName:"ul"},"\ud83c\udfa5 A ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"../api/classes/components.SimpleCamera"},"camera component"))," that defines where we are and in that 3D world."),(0,o.kt)("li",{parentName:"ul"},"\u26a1 A ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"../api/classes/components.SimpleRaycaster"},"raycaster component"))," that makes it possible to interact with\nthat 3D scene with our mouse / touch."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const components = new OBC.Components();\ncomponents.scene = new OBC.SimpleScene(components);\ncomponents.renderer = new OBC.SimpleRenderer(components, container);\ncomponents.camera = new OBC.SimpleCamera(components);\ncomponents.raycaster = new OBC.SimpleRaycaster(components);\n")),(0,o.kt)("p",null,"Now that everything is set up, let's start the app! You can do that with the ",(0,o.kt)("inlineCode",{parentName:"p"},"init")," method.\nIt will start updating all the components at 60 fps, so that you don't have to worry about the\nanimation loop: \ud83d\ude97\ud83d\udca8\ud83d\udca8\ud83d\udca8"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"components.init();\n")),(0,o.kt)("p",null,"And that's it! You already have set up 3D scene that can run on any device. Easy, right? \ud83e\udd73 But right now or scene\nis not very interesting, as it's only a infinite white void. Let's add some things to it! First, we need a reference\nto the scene, which you can get with the ",(0,o.kt)("inlineCode",{parentName:"p"},"get()")," method. This method is present in all the components and is used to\nget the core of the component. We can do it like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const scene = components.scene.get();\n")),(0,o.kt)("h3",{id:"-adjusting-scene-and-camera"},"\ud83c\udfa5 Adjusting scene and camera"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Great! Now we will locate the camera in a nice starting position. We can control the ",(0,o.kt)("inlineCode",{parentName:"p"},"SimpleCamera")," component through its\n",(0,o.kt)("inlineCode",{parentName:"p"},"controls")," attribute. This object is an instance of the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/yomotsu/camera-controls"},"camera-controls"),"\nlibrary, which makes it super easy to control the camera in our 3D scene. We will set the position of the camera\nto ",(0,o.kt)("inlineCode",{parentName:"p"},"[10, 10, 10]")," and make it look at the origin (",(0,o.kt)("inlineCode",{parentName:"p"},"[0, 0, 0]"),")."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"components.camera.controls.setLookAt(10, 10, 10, 0, 0, 0);\n")),(0,o.kt)("h3",{id:"-adding-some-3d-objects"},"\ud83c\udfc0 Adding some 3D objects"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Awesome! We are now ready to start adding some objects. First, we will add a\n",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"../api/classes/components.SimpleGrid"},"simple grid component")),". As the name implies, this component adds a simple\n2D grid to the scene that we can use as a reference."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const grid = new OBC.SimpleGrid(components);\n")),(0,o.kt)("p",null,"\ud83d\ude80 Also, let's add some real geometry to our small 3D app. All the components are built on top of\n",(0,o.kt)("a",{parentName:"p",href:"https://threejs.org/"},"Three.js"),", which means that Three.js code will work natively with them.\nThis is great, because you can easily integrate components with any 3D app that you create.\nLet's try it by adding a simple cube:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const boxMaterial = new THREE.MeshStandardMaterial({ color: '#6528D7' });\nconst boxGeometry = new THREE.BoxGeometry(3, 3, 3);\nconst cube = new THREE.Mesh(boxGeometry, boxMaterial);\ncube.position.set(0, 1.5, 0);\nscene.add(cube);\n")),(0,o.kt)("h3",{id:"-lighting-things-up"},"\ud83d\udd26 Lighting things up"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Of course, everything is black because we have no lights! Let's fix it by adding some basic illumination:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"components.scene.setup();\n")),(0,o.kt)("h3",{id:"-cleaning-up"},"\ud83e\uddf9 Cleaning up"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"As you might now, JavaScript has an automatic garbage collector that gets rid of the variables that you are no longer\nusing. Unfortunately, that's not the case for\n",(0,o.kt)("a",{parentName:"p",href:"https://threejs.org/docs/#manual/en/introduction/How-to-dispose-of-objects"},"Three.js"),". But don't worry: components\ntakes care of this for you. When you are finished working with a ",(0,o.kt)("inlineCode",{parentName:"p"},"Components")," instance, simply call\n",(0,o.kt)("inlineCode",{parentName:"p"},"components.dispose()")," and we will clean everything up for you!"),(0,o.kt)("admonition",{title:"Watch your variables!",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"When you dispose the memory, make sure that you don't have any object or array referencing anything inside the\n",(0,o.kt)("inlineCode",{parentName:"p"},"Components")," instance or this won't work, because JavaScript will detect that you are still using it!")),(0,o.kt)("admonition",{title:"Using React, Angular, Vue...?",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This topic is especially relevant in Single Page Application technologies because they never reload the page (which\nwould release all the memory automatically). If you are using some of these, make sure that you set up the disposing\nlogic to fire when you re-render the component that has the 3D app.")),(0,o.kt)("p",null,"And voil\xe0! You have made your first 3D application using components. Easy, right? Of course, this is still far from a\nfull-fledged BIM app, but don't worry! Keep following our tutorials and your app will go from zero to hero in no time! \ud83d\ude80"),(0,o.kt)("iframe",{src:"https://ifcjs.github.io/components/src/core/SimpleScene/index.html"}))}u.isMDXComponent=!0}}]);