"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[7031],{6830:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var s=n(4848),i=n(8453);const l={},r="Grid<L, E>",d={id:"api/@thatopen/ui/classes/Grid",title:"Grid\\<L, E\\>",description:"A custom grid component for web applications.",source:"@site/docs/api/@thatopen/ui/classes/Grid.md",sourceDirName:"api/@thatopen/ui/classes",slug:"/api/@thatopen/ui/classes/Grid",permalink:"/api/@thatopen/ui/classes/Grid",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Dropdown",permalink:"/api/@thatopen/ui/classes/Dropdown"},next:{title:"Icon",permalink:"/api/@thatopen/ui/classes/Icon"}},a={},o=[{value:"Element",id:"element",level:2},{value:"Extends",id:"extends",level:2},{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"floating",id:"floating",level:3},{value:"Default",id:"default",level:4},{value:"Examples",id:"examples",level:4},{value:"layout?",id:"layout",level:3},{value:"Default",id:"default-1",level:4},{value:"Examples",id:"examples-1",level:4},{value:"styles",id:"styles",level:3},{value:"Overrides",id:"overrides",level:4},{value:"Accessors",id:"accessors",level:2},{value:"layouts",id:"layouts",level:3},{value:"Remarks",id:"remarks",level:4},{value:"Parameters",id:"parameters",level:4}];function c(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"gridl-e",children:"Grid<L, E>"}),"\n",(0,s.jsx)(t.p,{children:"A custom grid component for web applications."}),"\n",(0,s.jsx)(t.h2,{id:"element",children:"Element"}),"\n",(0,s.jsx)(t.p,{children:"bim-grid"}),"\n",(0,s.jsx)(t.h2,{id:"extends",children:"Extends"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"LitElement"})}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"type-parameters",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Value"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"L"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"string"}),"[]"]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"E"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"GridComponentDefinition"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[]"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.h3,{id:"floating",children:"floating"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"floating"}),": ",(0,s.jsx)(t.code,{children:"boolean"})," = ",(0,s.jsx)(t.code,{children:"false"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Indicates whether the grid should be displayed in a floating state. When set to true, the grid and its children may have different styling to indicate a floating state, such as being absolutely positioned and having pointer-events set to none. This property is reflected to an attribute, allowing it to be set directly in HTML."}),"\n",(0,s.jsx)(t.h4,{id:"default",children:"Default"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"false\n"})}),"\n",(0,s.jsx)(t.h4,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"<bim-grid floating></bim-grid>\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"const grid = document.createElement('bim-grid');\r\ngrid.floating = true;\r\ndocument.body.appendChild(grid);\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"layout",children:"layout?"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"optional"})," ",(0,s.jsx)(t.strong,{children:"layout"}),": ",(0,s.jsx)(t.code,{children:"L"}),"[",(0,s.jsx)(t.code,{children:"number"}),"]"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Represents the layout configuration of the grid. The layout is defined by a string identifier which corresponds to a predefined grid template in the ",(0,s.jsx)(t.code,{children:"layouts"})," object of the Grid component. Setting this property updates the grid's template and triggers a reconfiguration of the grid's containers based on the new layout. If the specified layout is not defined, a warning is logged, and the layout remains unchanged. This property is reflected to an attribute, allowing it to be set directly in HTML. Changing the layout will dispatch a \"layoutchange\" event, which can be used to react to layout changes."]}),"\n",(0,s.jsx)(t.h4,{id:"default-1",children:"Default"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"undefined\n"})}),"\n",(0,s.jsx)(t.h4,{id:"examples-1",children:"Examples"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'<bim-grid layout="default"></bim-grid>\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"const grid = document.createElement('bim-grid');\r\ngrid.layout = 'default';\r\ndocument.body.appendChild(grid);\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"styles",children:"styles"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"static"})," ",(0,s.jsx)(t.strong,{children:"styles"}),": ",(0,s.jsx)(t.code,{children:"CSSResult"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"CSS styles for the component."}),"\n",(0,s.jsx)(t.h4,{id:"overrides",children:"Overrides"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"LitElement.styles"})}),"\n",(0,s.jsx)(t.h2,{id:"accessors",children:"Accessors"}),"\n",(0,s.jsx)(t.h3,{id:"layouts",children:"layouts"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"set"})," ",(0,s.jsx)(t.strong,{children:"layouts"}),"(",(0,s.jsx)(t.code,{children:"value"}),"): ",(0,s.jsx)(t.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Represents a collection of predefined grid layouts for the Grid component.\r\nEach layout is defined by a unique name, a grid template string, and a map of area names to HTMLElement instances or\r\nStatefull/Stateless component definitions.\r\nThe grid template string defines the structure of the grid, and the area names correspond to the grid-area property of the HTMLElement instances.\r\nThe HTMLElement instances are used to populate the grid with content."}),"\n",(0,s.jsx)(t.h4,{id:"remarks",children:"Remarks"}),"\n",(0,s.jsx)(t.p,{children:"Once defined, the layout is meant to be immutable."}),"\n",(0,s.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"value"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.a,{href:"/api/@thatopen/ui/type-aliases/GridLayoutsDefinition",children:(0,s.jsx)(t.code,{children:"GridLayoutsDefinition"})}),"<",(0,s.jsx)(t.code,{children:"L"}),", ",(0,s.jsx)(t.code,{children:"E"}),">"]})]})})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>d});var s=n(6540);const i={},l=s.createContext(i);function r(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);