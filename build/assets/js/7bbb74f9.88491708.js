"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[7582],{634:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var r=t(4848),i=t(8453);const o={},s="VertexPickerConfig",c={id:"api/@thatopen/components/interfaces/VertexPickerConfig",title:"VertexPickerConfig",description:"Configuration interface for the VertexPicker component.",source:"@site/docs/api/@thatopen/components/interfaces/VertexPickerConfig.md",sourceDirName:"api/@thatopen/components/interfaces",slug:"/api/@thatopen/components/interfaces/VertexPickerConfig",permalink:"/api/@thatopen/components/interfaces/VertexPickerConfig",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Updateable",permalink:"/api/@thatopen/components/interfaces/Updateable"},next:{title:"ViewpointBitmap",permalink:"/api/@thatopen/components/interfaces/ViewpointBitmap"}},p={},a=[{value:"Properties",id:"properties",level:2},{value:"previewElement",id:"previewelement",level:3},{value:"showOnlyVertex",id:"showonlyvertex",level:3},{value:"snapDistance",id:"snapdistance",level:3}];function l(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"vertexpickerconfig",children:"VertexPickerConfig"}),"\n",(0,r.jsx)(n.p,{children:"Configuration interface for the VertexPicker component."}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(n.h3,{id:"previewelement",children:"previewElement"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"previewElement"}),": ",(0,r.jsx)(n.code,{children:"HTMLElement"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The HTML element to use for previewing the picked vertex."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"showonlyvertex",children:"showOnlyVertex"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"showOnlyVertex"}),": ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"If true, only vertices will be picked, not the closest point on the face."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"snapdistance",children:"snapDistance"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"snapDistance"}),": ",(0,r.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The maximum distance for snapping to a vertex."})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var r=t(6540);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);