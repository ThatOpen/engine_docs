"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[2412],{609:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var t=o(4848),s=o(8453);const r={},a=void 0,d={id:"Tutorials/Components/Core/ShadowedScene",title:"ShadowedScene",description:'window.open("https://thatopen.github.io/engine_components/examples/ShadowedScene")} >Go Full Screen',source:"@site/docs/Tutorials/Components/Core/ShadowedScene.mdx",sourceDirName:"Tutorials/Components/Core",slug:"/Tutorials/Components/Core/ShadowedScene",permalink:"/Tutorials/Components/Core/ShadowedScene",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Raycasters",permalink:"/Tutorials/Components/Core/Raycasters"},next:{title:"Viewpoints",permalink:"/Tutorials/Components/Core/Viewpoints"}},i={},l=[{value:"\ud83d\ude0e Adding some cool shadows",id:"-adding-some-cool-shadows",level:3},{value:"\ud83c\udf0e Setting up a simple scene",id:"-setting-up-a-simple-scene",level:3},{value:"\ud83c\udf0e Loading a model",id:"-loading-a-model",level:3},{value:"\u26f1\ufe0f Adding shadows",id:"\ufe0f-adding-shadows",level:3},{value:"\u23f1\ufe0f Measuring the performance (optional)",id:"\ufe0f-measuring-the-performance-optional",level:3},{value:"\ud83c\udf89 Wrap up",id:"-wrap-up",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)("div",{style:{position:"relative"},children:[(0,t.jsx)("iframe",{src:"https://thatopen.github.io/engine_components/examples/ShadowedScene"}),(0,t.jsx)("button",{class:"full-screen-btn",onClick:()=>window.open("https://thatopen.github.io/engine_components/examples/ShadowedScene"),children:"Go Full Screen"})]}),"\n",(0,t.jsx)(n.admonition,{title:"Source",type:"info",children:(0,t.jsxs)(n.p,{children:["Copying and pasting? We've got you covered! You can find the full source code of this tutorial ",(0,t.jsx)(n.a,{href:"https://github.com/ThatOpen/engine_components/blob/main/packages/core/src/core/ShadowedScene/example.ts",children:"here"}),"."]})}),"\n",(0,t.jsx)(n.h3,{id:"-adding-some-cool-shadows",children:"\ud83d\ude0e Adding some cool shadows"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"In this tutorial, you'll learn how to add some nice looking (yet performant) shadows to your scene.\nIn this tutorial, we will import:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Three.js"})," to get some 3D entities for our app."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@thatopen/components"})," to set up the barebone of our app."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Stats.js"})," (optional) to measure the performance of our app."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import * as THREE from "three";\nimport Stats from "stats.js";\n// You have to import * as OBC from "@thatopen/components"\nimport * as OBC from "../..";\n'})}),"\n",(0,t.jsx)(n.h3,{id:"-setting-up-a-simple-scene",children:"\ud83c\udf0e Setting up a simple scene"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"We will start by creating a simple scene with a camera and a renderer. If you don't know how to set up a scene, you can check the Worlds tutorial."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const container = document.getElementById("container")!;\n\nconst components = new OBC.Components();\n\nconst worlds = components.get(OBC.Worlds);\n\nconst world = worlds.create<\n  OBC.ShadowedScene,\n  OBC.OrthoPerspectiveCamera,\n  OBC.SimpleRenderer\n>();\n\nworld.scene = new OBC.ShadowedScene(components);\nworld.renderer = new OBC.SimpleRenderer(components, container);\nworld.camera = new OBC.OrthoPerspectiveCamera(components);\n\ncomponents.init();\n\nworld.camera.controls.setLookAt(12, 6, 8, 0, 0, -10);\n\nconst grids = components.get(OBC.Grids);\nconst grid = grids.create(world);\n'})}),"\n",(0,t.jsx)(n.h3,{id:"-loading-a-model",children:"\ud83c\udf0e Loading a model"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"Now we will load a BIM fragments model."}),"\n",(0,t.jsx)(n.admonition,{title:"Fragments?",type:"tip",children:(0,t.jsx)(n.p,{children:"If you are not familiar with fragments, check out the IfcLoader tutorial!"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const fragments = components.get(OBC.FragmentsManager);\nconst githubUrl =\n  "https://thatopen.github.io/engine_fragment/resources/worker.mjs";\nconst fetchedUrl = await fetch(githubUrl);\nconst workerBlob = await fetchedUrl.blob();\nconst workerFile = new File([workerBlob], "worker.mjs", {\n  type: "text/javascript",\n});\nconst workerUrl = URL.createObjectURL(workerFile);\nfragments.init(workerUrl);\n\nworld.camera.controls.addEventListener("control", () =>\n  fragments.core.update(),\n);\n\nconst modelId = "example";\n\nconst file = await fetch(\n  "https://thatopen.github.io/engine_components/resources/frags/school_arq.frag",\n);\nconst data = await file.arrayBuffer();\nconst buffer = new Uint8Array(data);\nconst model = await fragments.core.load(buffer, {\n  modelId,\n  camera: world.camera.three,\n});\nworld.scene.three.add(model.object);\n'})}),"\n",(0,t.jsx)(n.h3,{id:"\ufe0f-adding-shadows",children:"\u26f1\ufe0f Adding shadows"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"Now we will add shadows. We will start by enabling the shadows in the three.js renderer."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"world.renderer.three.shadowMap.enabled = true;\nworld.renderer.three.shadowMap.type = THREE.PCFSoftShadowMap;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Next, we'll set up the scene and exclude the grid from the shadows. The shadows take into account the distance to the farthest visible object to decide a resolution for the shadows. The grid is infinite, so we don't want to take it into account."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"world.scene.setup({\n  shadows: {\n    cascade: 1,\n    resolution: 1024,\n  },\n});\n\nworld.scene.distanceRenderer.excludedObjects.add(grid.three);\n"})}),"\n",(0,t.jsx)(n.p,{children:"We will also need to enable the shadows for the materials and objects used in the fragments model:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'model.tiles.onItemSet.add(({ value: mesh }) => {\n  if ("isMesh" in mesh) {\n    const mat = mesh.material as THREE.MeshStandardMaterial[];\n    if (mat[0].opacity === 1) {\n      mesh.castShadow = true;\n      mesh.receiveShadow = true;\n    }\n  }\n});\n\nfor (const child of model.object.children) {\n  child.castShadow = true;\n  child.receiveShadow = true;\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Finally, we just need to update the shadows every time the camera moves (and a first time to see something even before the user does anything)."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'await world.scene.updateShadows();\n\nworld.camera.controls.addEventListener("rest", async () => {\n  await world.scene.updateShadows();\n});\n\nworld.scene.three.background = null;\n'})}),"\n",(0,t.jsx)(n.h3,{id:"\ufe0f-measuring-the-performance-optional",children:"\u23f1\ufe0f Measuring the performance (optional)"}),"\n",(0,t.jsxs)(n.p,{children:["We'll use the ",(0,t.jsx)(n.a,{href:"https://github.com/mrdoob/stats.js",children:"Stats.js"})," to measure the performance of our app. We will add it to the top left corner of the viewport. This way, we'll make sure that the memory consumption and the FPS of our app are under control."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const stats = new Stats();\nstats.showPanel(2);\ndocument.body.append(stats.dom);\nstats.dom.style.left = "0px";\nstats.dom.style.zIndex = "unset";\nworld.renderer.onBeforeUpdate.add(() => stats.begin());\nworld.renderer.onAfterUpdate.add(() => stats.end());\n'})}),"\n",(0,t.jsx)(n.h3,{id:"-wrap-up",children:"\ud83c\udf89 Wrap up"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"That's it! Now you know how to add some nice looking shadows to your scene. Congratulations! Keep exploring more tutorials in the documentation to keep learning."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>d});var t=o(6540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);