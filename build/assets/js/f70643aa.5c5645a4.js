"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[7701],{793:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var o=t(4848),s=t(8453);const i={},a=void 0,r={id:"Tutorials/UserInterface/OBC/ModelsList",title:"ModelsList",description:'window.open("https://thatopen.github.io/engine_ui-components/examples/ModelsList")} >Go Full Screen',source:"@site/docs/Tutorials/UserInterface/OBC/ModelsList.mdx",sourceDirName:"Tutorials/UserInterface/OBC",slug:"/Tutorials/UserInterface/OBC/ModelsList",permalink:"/Tutorials/UserInterface/OBC/ModelsList",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"EntityAttributes",permalink:"/Tutorials/UserInterface/OBC/EntityAttributes"},next:{title:"RelationsTree",permalink:"/Tutorials/UserInterface/OBC/RelationsTree"}},l={},c=[{value:"Managing your loaded models \ud83c\udfe2",id:"managing-your-loaded-models-",level:2},{value:"\ud83d\udd96 Importing our Libraries",id:"-importing-our-libraries",level:3},{value:"\ud83d\udccb Initializing the UI",id:"-initializing-the-ui",level:3},{value:"\ud83c\udf0e Setting up a simple scene",id:"-setting-up-a-simple-scene",level:3},{value:"Setting up the components",id:"setting-up-the-components",level:3},{value:"Creating the models list component",id:"creating-the-models-list-component",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)("div",{style:{position:"relative"},children:[(0,o.jsx)("iframe",{src:"https://thatopen.github.io/engine_ui-components/examples/ModelsList"}),(0,o.jsx)("button",{class:"full-screen-btn",onClick:()=>window.open("https://thatopen.github.io/engine_ui-components/examples/ModelsList"),children:"Go Full Screen"})]}),"\n",(0,o.jsx)(n.admonition,{title:"Source",type:"info",children:(0,o.jsxs)(n.p,{children:["Copying and pasting? We've got you covered! You can find the full source code of this tutorial ",(0,o.jsx)(n.a,{href:"https://github.com/ThatOpen/engine_ui-components/blob/main/packages/obc/src/components/tables/ModelsList/example.ts",children:"here"}),"."]})}),"\n",(0,o.jsx)(n.h2,{id:"managing-your-loaded-models-",children:"Managing your loaded models \ud83c\udfe2"}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.p,{children:"What else can we say? The task is really simple: we need to see a list of the loaded models in the app. Let's get into it!"}),"\n",(0,o.jsx)(n.h3,{id:"-importing-our-libraries",children:"\ud83d\udd96 Importing our Libraries"}),"\n",(0,o.jsx)(n.p,{children:"In this tutorial, we will import:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"@thatopen/components to set up the barebone of our app."}),"\n",(0,o.jsx)(n.li,{children:"@thatopen/ui to add some simple and cool UI menus."}),"\n",(0,o.jsx)(n.li,{children:"@thatopen/ui-obc to add some cool pre-made UI menus for components."}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'import * as OBC from "@thatopen/components";\nimport * as BUI from "@thatopen/ui";\n// You have to import from "@thatopen/ui-obc"\nimport * as BUIC from "../..";\n'})}),"\n",(0,o.jsx)(n.h3,{id:"-initializing-the-ui",children:"\ud83d\udccb Initializing the UI"}),"\n",(0,o.jsx)(n.p,{children:"As always, let's first initialize the UI library. Remember you only have to do it once in your entire app."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"BUI.Manager.init();\n"})}),"\n",(0,o.jsx)(n.h3,{id:"-setting-up-a-simple-scene",children:"\ud83c\udf0e Setting up a simple scene"}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.p,{children:"We will start by creating a simple scene with a camera and a renderer. If you don't know how to set up a scene, you can check the Worlds tutorial."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'const components = new OBC.Components();\n\nconst worlds = components.get(OBC.Worlds);\nconst world = worlds.create();\n\nconst sceneComponent = new OBC.SimpleScene(components);\nsceneComponent.setup();\nworld.scene = sceneComponent;\n\nconst viewport = document.createElement("bim-viewport");\nconst rendererComponent = new OBC.SimpleRenderer(components, viewport);\nworld.renderer = rendererComponent;\n\nconst cameraComponent = new OBC.SimpleCamera(components);\nworld.camera = cameraComponent;\n\nviewport.addEventListener("resize", () => {\n  rendererComponent.resize();\n  cameraComponent.updateAspect();\n});\n\nconst viewerGrids = components.get(OBC.Grids);\nviewerGrids.create(world);\n\ncomponents.init();\n'})}),"\n",(0,o.jsx)(n.h3,{id:"setting-up-the-components",children:"Setting up the components"}),"\n",(0,o.jsxs)(n.p,{children:["First of all, we're going to get the ",(0,o.jsx)(n.code,{children:"FragmentIfcLoader"})," from an existing components instance:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const ifcLoader = components.get(OBC.IfcLoader);\nawait ifcLoader.setup();\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The step above is super important as none of the existing functional components setup any tool, they just get it as they are! So, if we don't setup the ",(0,o.jsx)(n.code,{children:"FragmentIfcLoader"})," then the wasm path is not going to be defined and an error will arise \ud83e\udd13. Just after we have setup the loader, let's then configure the ",(0,o.jsx)(n.code,{children:"FragmentManager"})," so any time a model is loaded it gets added to some world scene created before:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const fragmentsManager = components.get(OBC.FragmentsManager);\nfragmentsManager.onFragmentsLoaded.add((model) => {\n  if (world.scene) world.scene.three.add(model);\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"creating-the-models-list-component",children:"Creating the models list component"}),"\n",(0,o.jsx)(n.p,{children:"Allright! Now that some basic events are setup, it's time to create a new fresh models list component:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const [modelsList] = BUIC.tables.modelsList({\n  components,\n  tags: { schema: true, viewDefinition: false },\n  actions: { download: false },\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:"Now that we have a brand new models list created, we need to add it to the HTML page. For it, let's create simple BIM panel component where we include the models list and also a pre-made IFC load button \ud83d\udc47"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'const panel = BUI.Component.create(() => {\n  const [loadIfcBtn] = BUIC.buttons.loadIfc({ components });\n\n  return BUI.html`\n   <bim-panel label="IFC Models">\n    <bim-panel-section label="Importing">\n      ${loadIfcBtn}\n    </bim-panel-section>\n    <bim-panel-section icon="mage:box-3d-fill" label="Loaded Models">\n      ${modelsList}\n    </bim-panel-section>\n   </bim-panel> \n  `;\n});\n'})}),"\n",(0,o.jsx)(n.p,{children:"Finally, let's append the BIM Panel to the page to see the models list working \ud83d\ude09"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'const app = document.createElement("bim-grid");\napp.layouts = {\n  main: {\n    template: `\n      "panel viewport"\n      / 23rem 1fr\n    `,\n    elements: { panel, viewport },\n  },\n};\n\napp.layout = "main";\ndocument.body.append(app);\n'})}),"\n",(0,o.jsx)(n.p,{children:"Congratulations! You've now a ready to go user interface that let's you show and dispose IFC models loaded into your app \ud83e\udd73"})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var o=t(6540);const s={},i=o.createContext(s);function a(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);