"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7150],{3905:(e,t,n)=>{n.d(t,{Zo:()=>h,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var g=a.createContext({}),s=function(e){var t=a.useContext(g),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},h=function(e){var t=s(e.components);return a.createElement(g.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,g=e.parentName,h=o(e,["components","mdxType","originalType","parentName"]),c=s(n),m=r,u=c["".concat(g,".").concat(m)]||c[m]||p[m]||i;return n?a.createElement(u,l(l({ref:t},h),{},{components:n})):a.createElement(u,l({ref:t},h))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var g in t)hasOwnProperty.call(t,g)&&(o[g]=t[g]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},285:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={},l=void 0,o={unversionedId:"Tutorials/FragmentHighlighter",id:"Tutorials/FragmentHighlighter",title:"FragmentHighlighter",description:"\ud83e\udd0f Nudging Fragments",source:"@site/docs/Tutorials/FragmentHighlighter.mdx",sourceDirName:"Tutorials",slug:"/Tutorials/FragmentHighlighter",permalink:"/Tutorials/FragmentHighlighter",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"FragmentHider",permalink:"/Tutorials/FragmentHider"},next:{title:"FragmentIfcLoader",permalink:"/Tutorials/FragmentIfcLoader"}},g={},s=[{value:"\ud83e\udd0f Nudging Fragments",id:"-nudging-fragments",level:3},{value:"Managing Fragments",id:"managing-fragments",level:4},{value:"\ud83d\udccc Selecting Fragments",id:"-selecting-fragments",level:3},{value:"\ud83c\udfa8 Changing Highlight Appearance",id:"-changing-highlight-appearance",level:3},{value:"\ud83d\udece\ufe0f Getting Selection Events",id:"\ufe0f-getting-selection-events",level:3},{value:"Performing Highlighting On Click",id:"performing-highlighting-on-click",level:4}],h={toc:s},c="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"-nudging-fragments"},"\ud83e\udd0f Nudging Fragments"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Until now, you could add IFC files to your BIM App and render Fragments in your scene.\nIn this lesson, we will show you how to select Fragment elements.\nThis may appear to be an immense task but believe us when we say it will take less than 5 minutes to complete.\ud83d\ude80"),(0,r.kt)("admonition",{title:"First, let's set up a simple scene!",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\ud83d\udc40 If you haven't started there, check out ",(0,r.kt)("a",{parentName:"p",href:"/Tutorials/SimpleScene"},"that tutorial first"),"!")),(0,r.kt)("h4",{id:"managing-fragments"},"Managing Fragments"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"To deal with Fragments we will use ",(0,r.kt)("inlineCode",{parentName:"p"},"FragmentManager"),", it will help us to render ",(0,r.kt)("strong",{parentName:"p"},"Fragments")," easily.\ud83d\udcaa"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const fragments = new OBC.FragmentManager(components);\n")),(0,r.kt)("admonition",{title:"\ud83c\udfd4\ufe0f Showing Fragments in the Scene",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Fragment Manager has its own tutorial, check out ",(0,r.kt)("a",{parentName:"p",href:"/Tutorials/FragmentManager"},"that tutorial here"),"!")),(0,r.kt)("h3",{id:"-selecting-fragments"},"\ud83d\udccc Selecting Fragments"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"We will start by using ",(0,r.kt)("a",{parentName:"p",href:"../api/classes/components.FragmentHighlighter"},"Fragment Highlighter"),",\nwhich needs reference of ",(0,r.kt)("inlineCode",{parentName:"p"},"component")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"fragments")," to be provided to it.\ud83e\uddee\nDoing so, we will get an instance of ",(0,r.kt)("strong",{parentName:"p"},"Fragment Highlighter")," which will be used for our selection mechanism."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const highlighter = new OBC.FragmentHighlighter(components, fragments);\nconst file = await fetch("../../../resources/small.frag");\nconst dataBlob = await file.arrayBuffer();\nconst buffer = new Uint8Array(dataBlob);\nfragments.load(buffer);\nhighlighter.updateHighlight();\ncomponents.renderer.postproduction.customEffects.outlineEnabled = true;\nhighlighter.outlinesEnabled = true;\n')),(0,r.kt)("h3",{id:"-changing-highlight-appearance"},"\ud83c\udfa8 Changing Highlight Appearance"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"The beauty of ",(0,r.kt)("strong",{parentName:"p"},"components")," is it understands ",(0,r.kt)("inlineCode",{parentName:"p"},"three.js"),",\nthis will help us to instantly change the Highlight color for the Fragments selection.\nWe will use ",(0,r.kt)("strong",{parentName:"p"},"red")," color and create a ",(0,r.kt)("inlineCode",{parentName:"p"},"MeshBasicMaterial"),",\nwhich we will pass to the highlighter component using ",(0,r.kt)("inlineCode",{parentName:"p"},"highlighter.add()"),".\nTo remember the highlighter material created, we will pass first variable as the Highlighter Name.\ud83d\ude0e"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const highlightMaterial = new THREE.MeshBasicMaterial({\ncolor: '#BCF124',\ndepthTest: false,\nopacity: 0.8,\ntransparent: true\n});\nhighlighter.add('default', highlightMaterial);\nhighlighter.outlineMaterial.color.set(0xf0ff7a);\n")),(0,r.kt)("h3",{id:"\ufe0f-getting-selection-events"},"\ud83d\udece\ufe0f Getting Selection Events"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Now that we have our base setup ready, we will now implement the logic needed for selection of Fragment.\nLet's start by declaring a variable - ",(0,r.kt)("inlineCode",{parentName:"p"},"lastSelection")," which will hold the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"fragment.id"))," of the Fragment that was selected.\nAlso, we define a variable which will convey Highlighter to only perform single selection and not multiple selection.\ud83c\udfaf"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let lastSelection;\nlet singleSelection = {\nvalue: true,\n};\n")),(0,r.kt)("h4",{id:"performing-highlighting-on-click"},"Performing Highlighting On Click"),(0,r.kt)("p",null,"Now comes the exciting part: we will add an event listener to the ",(0,r.kt)("strong",{parentName:"p"},"container")," that will detect click events.\ud83d\uddb1\ufe0f\nWhen a click is detected, the function ",(0,r.kt)("inlineCode",{parentName:"p"},"highlightOnClick()")," is called,\nwhich checks internally to see if the Fragment was present and returns the ID of the Fragment that was clicked on.\ud83d\udced\nTo highlight the selection based upon the material you had created, you must pass the ",(0,r.kt)("inlineCode",{parentName:"p"},"Highlighter Name"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"async function highlightOnClick(event) {\nconst result = await highlighter.highlight('default', singleSelection.value);\nif (result) {\nlastSelection = {};\nfor (const fragment of result.fragments) {\nconst fragmentID = fragment.id;\nlastSelection[fragmentID] = [result.id];\n}\n}\n}\ncontainer.addEventListener('click', (event) => highlightOnClick(event));\n")),(0,r.kt)("p",null,"What if you need to highlight the item using Fragment ID?\nThe same instance of Highlighter can be used to choose elements based on ",(0,r.kt)("strong",{parentName:"p"},"Fragment ID"),".\ud83e\udde9\nYou can use ",(0,r.kt)("inlineCode",{parentName:"p"},"highlighter.highlightByID()")," and provide an array of Fragment IDs to have the work done for you!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function highlightOnID() {\nif (lastSelection !== undefined) {\nhighlighter.highlightByID('default', lastSelection);\n}\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Congratulations")," \ud83c\udf89 on completing this tutorial! Now you can ",(0,r.kt)("strong",{parentName:"p"},"Highlight")," and perform ",(0,r.kt)("strong",{parentName:"p"},"Selection")," on any Fragment Model using\n",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"../api/classes/components.FragmentHighlighter"},"Fragment Highlighter Component"))," \ud83c\udfa8\ud83d\udd8c\ufe0f\nLet's keep it up and check out another tutorial! \ud83c\udf93"),(0,r.kt)("iframe",{src:"https://thatopen.github.io/engine_components/src/fragments/FragmentHighlighter/index.html"}))}p.isMDXComponent=!0}}]);