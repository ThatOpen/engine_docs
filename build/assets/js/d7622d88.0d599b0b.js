"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[7110],{2639:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=s(4848),t=s(8453);const a={},i="AreaMeasurement",l={id:"api/@thatopen/components-front/classes/AreaMeasurement",title:"AreaMeasurement",description:"AreaMeasurement allows users to measure and interact with areas in a 3D environment. This class provides functionality for creating, updating, and deleting area measurements, as well as managing their visual representation. \ud83d\udcd5 Tutorial. \ud83d\udcd8 API.",source:"@site/docs/api/@thatopen/components-front/classes/AreaMeasurement.md",sourceDirName:"api/@thatopen/components-front/classes",slug:"/api/@thatopen/components-front/classes/AreaMeasurement",permalink:"/api/@thatopen/components-front/classes/AreaMeasurement",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"@thatopen/components-front",permalink:"/api/@thatopen/components-front/"},next:{title:"CivilCrossSectionNavigator",permalink:"/api/@thatopen/components-front/classes/CivilCrossSectionNavigator"}},o={},c=[{value:"Extends",id:"extends",level:2},{value:"Properties",id:"properties",level:2},{value:"modes",id:"modes",level:3},{value:"Overrides",id:"overrides",level:4},{value:"pickTolerance",id:"picktolerance",level:3},{value:"Default",id:"default",level:4},{value:"tolerance",id:"tolerance",level:3},{value:"Default",id:"default-1",level:4},{value:"Accessors",id:"accessors",level:2},{value:"mode",id:"mode",level:3},{value:"Parameters",id:"parameters",level:4}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"areameasurement",children:"AreaMeasurement"}),"\n",(0,r.jsxs)(n.p,{children:["AreaMeasurement allows users to measure and interact with areas in a 3D environment. This class provides functionality for creating, updating, and deleting area measurements, as well as managing their visual representation. \ud83d\udcd5 ",(0,r.jsx)(n.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/AreaMeasurement",children:"Tutorial"}),". \ud83d\udcd8 ",(0,r.jsx)(n.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/AreaMeasurement",children:"API"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"extends",children:"Extends"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/api/@thatopen/components-front/classes/Measurement",children:(0,r.jsx)(n.code,{children:"Measurement"})}),"<",(0,r.jsx)(n.code,{children:"Area"}),", ",(0,r.jsx)(n.code,{children:'"area"'}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(n.h3,{id:"modes",children:"modes"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"modes"}),": (",(0,r.jsx)(n.code,{children:'"free"'})," | ",(0,r.jsx)(n.code,{children:'"square"'}),")[]"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The possible modes in which a measurement of this type may be created."}),"\n",(0,r.jsx)(n.h4,{id:"overrides",children:"Overrides"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"Measurement.modes"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"picktolerance",children:"pickTolerance"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"pickTolerance"}),": ",(0,r.jsx)(n.code,{children:"number"})," = ",(0,r.jsx)(n.code,{children:"1e-1"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The tolerance value used for picking operations in area measurement.\r\nThis value determines the precision or sensitivity when selecting or interacting\r\nwith measurement areas. A smaller value increases precision, while a larger value\r\nallows for more leniency in selection."}),"\n",(0,r.jsx)(n.h4,{id:"default",children:"Default"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"0.1\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"tolerance",children:"tolerance"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"tolerance"}),": ",(0,r.jsx)(n.code,{children:"number"})," = ",(0,r.jsx)(n.code,{children:"5e-3"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Represents the tolerance value used for area measurement calculations.\r\nThis value defines the acceptable margin of error for a point in the shape to be added to the area element."}),"\n",(0,r.jsx)(n.h4,{id:"default-1",children:"Default"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"0.005\n"})}),"\n",(0,r.jsx)(n.h2,{id:"accessors",children:"Accessors"}),"\n",(0,r.jsx)(n.h3,{id:"mode",children:"mode"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"set"})," ",(0,r.jsx)(n.strong,{children:"mode"}),"(",(0,r.jsx)(n.code,{children:"value"}),"): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Represents the current measurement mode being used."}),"\n",(0,r.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.code,{children:"value"})}),(0,r.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,r.jsx)(n.code,{children:'"free"'})," | ",(0,r.jsx)(n.code,{children:'"square"'})]})]})})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var r=s(6540);const t={},a=r.createContext(t);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);