"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[3551],{2812:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>h,contentTitle:()=>d,default:()=>a,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var n=t(4848),s=t(8453);const l={},d="Marker",i={id:"api/@thatopen/components-front/classes/Marker",title:"Marker",description:"Component for Managing Markers along with creating different types of markers. Every marker is a Simple2DMarker. For every marker that needs to be added, you can use the Manager to add the marker and change its look and feel. \ud83d\udcd5 Tutorial. \ud83d\udcd8 API.",source:"@site/docs/api/@thatopen/components-front/classes/Marker.md",sourceDirName:"api/@thatopen/components-front/classes",slug:"/api/@thatopen/components-front/classes/Marker",permalink:"/api/@thatopen/components-front/classes/Marker",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Mark",permalink:"/api/@thatopen/components-front/classes/Mark"},next:{title:"abstract Measurement\\<T, U\\>",permalink:"/api/@thatopen/components-front/classes/Measurement"}},h={},c=[{value:"Extends",id:"extends",level:2},{value:"Implements",id:"implements",level:2},{value:"Properties",id:"properties",level:2},{value:"autoCluster",id:"autocluster",level:3},{value:"enabled",id:"enabled",level:3},{value:"Overrides",id:"overrides",level:4},{value:"list",id:"list",level:3},{value:"onDisposed",id:"ondisposed",level:3},{value:"Implementation of",id:"implementation-of",level:4},{value:"threshold",id:"threshold",level:3},{value:"uuid",id:"uuid",level:3},{value:"Accessors",id:"accessors",level:2},{value:"color",id:"color",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"cluster()",id:"cluster",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"create()",id:"create",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"delete()",id:"delete",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Remarks",id:"remarks",level:4},{value:"dispose()",id:"dispose",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Implementation of",id:"implementation-of-1",level:4},{value:"getWorldMarkerList()",id:"getworldmarkerlist",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Remarks",id:"remarks-1",level:4},{value:"setupEvents()",id:"setupevents",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Remarks",id:"remarks-2",level:4}];function o(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"marker",children:"Marker"}),"\n",(0,n.jsxs)(r.p,{children:["Component for Managing Markers along with creating different types of markers. Every marker is a Simple2DMarker. For every marker that needs to be added, you can use the Manager to add the marker and change its look and feel. \ud83d\udcd5 ",(0,n.jsx)(r.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/Marker",children:"Tutorial"}),". \ud83d\udcd8 ",(0,n.jsx)(r.a,{href:"https://docs.thatopen.com/api/@thatopen-platform/components-beta-front/classes/Marker",children:"API"}),"."]}),"\n",(0,n.jsx)(r.h2,{id:"extends",children:"Extends"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"Component"})}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"implements",children:"Implements"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"Disposable_2"})}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(r.h3,{id:"autocluster",children:"autoCluster"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"autoCluster"}),": ",(0,n.jsx)(r.code,{children:"boolean"})," = ",(0,n.jsx)(r.code,{children:"true"})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Indicates whether markers should be automatically clustered.\r\nIf true, markers will be clustered based on the threshold value.\r\nDefault value is true."}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"enabled",children:"enabled"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"enabled"}),": ",(0,n.jsx)(r.code,{children:"boolean"})," = ",(0,n.jsx)(r.code,{children:"true"})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"OBC.Component.enabled"}),"\n",(0,n.jsx)(r.h4,{id:"overrides",children:"Overrides"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.code,{children:"OBC.Component.enabled"})}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"list",children:"list"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"list"}),": ",(0,n.jsx)(r.code,{children:"Map"}),"<",(0,n.jsx)(r.code,{children:"string"}),", ",(0,n.jsx)(r.code,{children:"Map"}),"<",(0,n.jsx)(r.code,{children:"string"}),", ",(0,n.jsx)(r.a,{href:"/api/@thatopen/components-front/interfaces/IMarker",children:(0,n.jsx)(r.code,{children:"IMarker"})}),">>"]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"A Map containing the markers grouped by world UUID.\r\nEach world can have its own set of markers."}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"ondisposed",children:"onDisposed"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"readonly"})," ",(0,n.jsx)(r.strong,{children:"onDisposed"}),": ",(0,n.jsx)(r.code,{children:"Event_2"}),"<",(0,n.jsx)(r.code,{children:"unknown"}),">"]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"OBC.Disposable.onDisposed"}),"\n",(0,n.jsx)(r.h4,{id:"implementation-of",children:"Implementation of"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.code,{children:"OBC.Disposable.onDisposed"})}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"threshold",children:"threshold"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"threshold"}),": ",(0,n.jsx)(r.code,{children:"number"})," = ",(0,n.jsx)(r.code,{children:"50"})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"The distance threshold for clustering markers.\r\nMarkers within this distance will be considered for clustering.\r\nDefault value is 50."}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"uuid",children:"uuid"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"static"})," ",(0,n.jsx)(r.code,{children:"readonly"})," ",(0,n.jsx)(r.strong,{children:"uuid"}),": ",(0,n.jsx)(r.code,{children:'"4079eb91-79b0-4ede-bcf2-15b837129236"'})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"A unique identifier for the component.\r\nThis UUID is used to register the component within the Components system."}),"\n",(0,n.jsx)(r.h2,{id:"accessors",children:"Accessors"}),"\n",(0,n.jsx)(r.h3,{id:"color",children:"color"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"get"})," ",(0,n.jsx)(r.strong,{children:"color"}),"(): ",(0,n.jsx)(r.code,{children:"string"})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Getter for the color property.\r\nReturns the current color of the markers."}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"set"})," ",(0,n.jsx)(r.strong,{children:"color"}),"(",(0,n.jsx)(r.code,{children:"value"}),"): ",(0,n.jsx)(r.code,{children:"void"})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Setter for the color property.\r\nUpdates the color of all the markers to the new value."}),"\n",(0,n.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"value"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"string"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"The new color value for the markers."})]})})]}),"\n",(0,n.jsx)(r.h4,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.code,{children:"string"})}),"\n",(0,n.jsx)(r.p,{children:"The current color of the markers."}),"\n",(0,n.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(r.h3,{id:"cluster",children:"cluster()"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"cluster"}),"(",(0,n.jsx)(r.code,{children:"world"}),"): ",(0,n.jsx)(r.code,{children:"void"})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Performs clustering of markers in the given world."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"world"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"World"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"The world where clustering will be performed."})]})})]}),"\n",(0,n.jsx)(r.h4,{id:"returns-1",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.code,{children:"void"})}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"create",children:"create()"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"create"}),"(",(0,n.jsx)(r.code,{children:"world"}),", ",(0,n.jsx)(r.code,{children:"element"}),", ",(0,n.jsx)(r.code,{children:"point"}),", ",(0,n.jsx)(r.code,{children:"isStatic"}),"): ",(0,n.jsx)(r.code,{children:"null"})," | ",(0,n.jsx)(r.code,{children:"string"})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Creates a new marker at the specified point in the world."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Default value"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"world"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"World"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"undefined"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"The world where the marker will be created."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"element"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"HTMLElement"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"undefined"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"-"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"point"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"Vector3"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"undefined"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"The 3D position where the marker will be placed."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"isStatic"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"boolean"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"false"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"Indicates whether the marker should be static and not clustered."})]})]})]}),"\n",(0,n.jsx)(r.h4,{id:"returns-2",children:"Returns"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"null"})," | ",(0,n.jsx)(r.code,{children:"string"})]}),"\n",(0,n.jsx)(r.p,{children:"The unique key of the created marker."}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"delete",children:"delete()"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"delete"}),"(",(0,n.jsx)(r.code,{children:"id"}),"): ",(0,n.jsx)(r.code,{children:"void"})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Deletes a marker with the specified ID from all worlds."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"id"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"string"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"The unique identifier of the marker to be deleted."})]})})]}),"\n",(0,n.jsx)(r.h4,{id:"returns-3",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.code,{children:"void"})}),"\n",(0,n.jsx)(r.h4,{id:"remarks",children:"Remarks"}),"\n",(0,n.jsx)(r.p,{children:"This method iterates through all the worlds and their respective markers.\r\nIf a marker with the specified ID is found, it disposes of the marker's label\r\nand removes the marker from the world's marker list."}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"dispose",children:"dispose()"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"dispose"}),"(",(0,n.jsx)(r.code,{children:"type"}),"?): ",(0,n.jsx)(r.code,{children:"void"})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"OBC.Disposable.dispose"}),"\n",(0,n.jsx)(r.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{style:{textAlign:"left"},children:[(0,n.jsx)(r.code,{children:"type"}),"?"]}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"string"})})]})})]}),"\n",(0,n.jsx)(r.h4,{id:"returns-4",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.code,{children:"void"})}),"\n",(0,n.jsx)(r.h4,{id:"implementation-of-1",children:"Implementation of"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.code,{children:"OBC.Disposable.dispose"})}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"getworldmarkerlist",children:"getWorldMarkerList()"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"getWorldMarkerList"}),"(",(0,n.jsx)(r.code,{children:"world"}),"): ",(0,n.jsx)(r.code,{children:"Map"}),"<",(0,n.jsx)(r.code,{children:"string"}),", ",(0,n.jsx)(r.a,{href:"/api/@thatopen/components-front/interfaces/IMarker",children:(0,n.jsx)(r.code,{children:"IMarker"})}),">"]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Retrieves the list of markers associated with a specific world.\r\nIf the list does not exist for the given world, it creates a new one."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"world"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"World"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"The world for which the marker list is to be retrieved."})]})})]}),"\n",(0,n.jsx)(r.h4,{id:"returns-5",children:"Returns"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"Map"}),"<",(0,n.jsx)(r.code,{children:"string"}),", ",(0,n.jsx)(r.a,{href:"/api/@thatopen/components-front/interfaces/IMarker",children:(0,n.jsx)(r.code,{children:"IMarker"})}),">"]}),"\n",(0,n.jsx)(r.p,{children:"A Map containing the markers associated with the given world."}),"\n",(0,n.jsx)(r.h4,{id:"remarks-1",children:"Remarks"}),"\n",(0,n.jsx)(r.p,{children:"This method is used to manage markers per world. It ensures that each world has its own set of markers.\r\nIf a marker list for the given world does not exist, it creates a new one and associates it with the world."}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h3,{id:"setupevents",children:"setupEvents()"}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"setupEvents"}),"(",(0,n.jsx)(r.code,{children:"world"}),", ",(0,n.jsx)(r.code,{children:"enabled"}),"): ",(0,n.jsx)(r.code,{children:"void"})]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Sets up event listeners for clustering markers in the given world."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"world"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"World"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"The world where the event listeners will be set up."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"enabled"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"boolean"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"Indicates whether the event listeners should be enabled or disabled."})]})]})]}),"\n",(0,n.jsx)(r.h4,{id:"returns-6",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.code,{children:"void"})}),"\n",(0,n.jsx)(r.h4,{id:"remarks-2",children:"Remarks"}),"\n",(0,n.jsxs)(r.p,{children:["This method checks if the event listeners are already set up for the given world.\r\nIf the event listeners are already set up and the ",(0,n.jsx)(r.code,{children:"enabled"})," parameter is true, the method returns without doing anything.\r\nIf the world does not have camera controls, the method returns without doing anything."]}),"\n",(0,n.jsxs)(r.p,{children:["The method then retrieves the event listener for the given world using the ",(0,n.jsx)(r.code,{children:"getWorldEvent"}),' method.\r\nIt removes the existing event listeners for the "sleep" and "rest" events from the world\'s camera controls.']}),"\n",(0,n.jsxs)(r.p,{children:["If the ",(0,n.jsx)(r.code,{children:"enabled"}),' parameter is true, the method adds the event listener for the "sleep" and "rest" events to the world\'s camera controls.']})]})}function a(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>d,x:()=>i});var n=t(6540);const s={},l=n.createContext(s);function d(e){const r=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),n.createElement(l.Provider,{value:r},e.children)}}}]);