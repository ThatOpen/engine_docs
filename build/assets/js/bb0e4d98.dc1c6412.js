"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[9349],{2507:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>p,default:()=>d,frontMatter:()=>c,metadata:()=>r,toc:()=>a});var t=i(4848),o=i(8453);const c={},p="ViewpointClippingPlane",r={id:"api/@thatopen/components/interfaces/ViewpointClippingPlane",title:"ViewpointClippingPlane",description:"Represents a clipping plane in a viewpoint, defined by its location and direction. This interface is compliant with the BCF API specifications.",source:"@site/docs/api/@thatopen/components/interfaces/ViewpointClippingPlane.md",sourceDirName:"api/@thatopen/components/interfaces",slug:"/api/@thatopen/components/interfaces/ViewpointClippingPlane",permalink:"/api/@thatopen/components/interfaces/ViewpointClippingPlane",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ViewpointCamera",permalink:"/api/@thatopen/components/interfaces/ViewpointCamera"},next:{title:"ViewpointColoring",permalink:"/api/@thatopen/components/interfaces/ViewpointColoring"}},s={},a=[{value:"Properties",id:"properties",level:2},{value:"direction",id:"direction",level:3},{value:"location",id:"location",level:3}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"viewpointclippingplane",children:"ViewpointClippingPlane"}),"\n",(0,t.jsx)(n.p,{children:"Represents a clipping plane in a viewpoint, defined by its location and direction. This interface is compliant with the BCF API specifications."}),"\n",(0,t.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(n.h3,{id:"direction",children:"direction"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"direction"}),": ",(0,t.jsx)(n.a,{href:"/api/@thatopen/components/interfaces/ViewpointVector",children:(0,t.jsx)(n.code,{children:"ViewpointVector"})})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The direction vector indicating the orientation of the clipping plane."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"location",children:"location"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"location"}),": ",(0,t.jsx)(n.a,{href:"/api/@thatopen/components/interfaces/ViewpointVector",children:(0,t.jsx)(n.code,{children:"ViewpointVector"})})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The position vector of the clipping plane."})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>p,x:()=>r});var t=i(6540);const o={},c=t.createContext(o);function p(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:p(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);