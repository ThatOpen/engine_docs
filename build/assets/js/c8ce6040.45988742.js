"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8182],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=s(t),d=a,f=c["".concat(l,".").concat(d)]||c[d]||u[d]||i;return t?r.createElement(f,o(o({ref:n},m),{},{components:t})):r.createElement(f,o({ref:n},m))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[c]="string"==typeof e?e:a,o[1]=p;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},642:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const i={id:"openbim_components.UI",title:"Interface: UI",sidebar_label:"UI",custom_edit_url:null},o=void 0,p={unversionedId:"api/interfaces/openbim_components.UI",id:"api/interfaces/openbim_components.UI",title:"Interface: UI",description:"openbim-components.UI",source:"@site/docs/api/interfaces/openbim_components.UI.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/openbim_components.UI",permalink:"/api/interfaces/openbim_components.UI",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"openbim_components.UI",title:"Interface: UI",sidebar_label:"UI",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Resizeable",permalink:"/api/interfaces/openbim_components.Resizeable"},next:{title:"Updateable",permalink:"/api/interfaces/openbim_components.Updateable"}},l={},s=[{value:"Implemented by",id:"implemented-by",level:2},{value:"Properties",id:"properties",level:2},{value:"uiElement",id:"uielement",level:3},{value:"Defined in",id:"defined-in",level:4}],m={toc:s},c="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/api/modules/openbim_components"},"openbim-components"),".UI"),(0,a.kt)("p",null,"Whether this component has a representation in the user\ninterface, like a button or a window."),(0,a.kt)("h2",{id:"implemented-by"},"Implemented by"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/classes/openbim_components.FragmentManager"},(0,a.kt)("inlineCode",{parentName:"a"},"FragmentManager"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/classes/openbim_components.FragmentPlans"},(0,a.kt)("inlineCode",{parentName:"a"},"FragmentPlans"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/classes/openbim_components.LengthMeasurement"},(0,a.kt)("inlineCode",{parentName:"a"},"LengthMeasurement"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/classes/openbim_components.OrthoPerspectiveCamera"},(0,a.kt)("inlineCode",{parentName:"a"},"OrthoPerspectiveCamera"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/classes/openbim_components.Simple2DScene"},(0,a.kt)("inlineCode",{parentName:"a"},"Simple2DScene"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/classes/openbim_components.SimpleClipper"},(0,a.kt)("inlineCode",{parentName:"a"},"SimpleClipper")))),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"uielement"},"uiElement"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"uiElement"),": ",(0,a.kt)("a",{parentName:"p",href:"/api/classes/openbim_components.UIElement"},(0,a.kt)("inlineCode",{parentName:"a"},"UIElement")),"<{ ",(0,a.kt)("inlineCode",{parentName:"p"},"[name: string]"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"SimpleUIComponent"),";  }",">"),(0,a.kt)("p",null,"The class containing all the buttons, windows, tables, etc., of this component."),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/ThatOpen/engine_components/blob/31b6f97/src/base-types/base-types.ts#L197"},"temp/engine_components/src/base-types/base-types.ts:197")))}u.isMDXComponent=!0}}]);