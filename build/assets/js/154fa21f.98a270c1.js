"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[5259],{6672:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>d,default:()=>a,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var l=n(4848),t=n(8453);const i={},d="ClipEdges",r={id:"api/@thatopen/components-front/classes/ClipEdges",title:"ClipEdges",description:"The ClipEdges class is responsible for managing and rendering clipped edges and fills in a ThreeJS scene based on specified styles and models. \ud83d\udcd5 Tutorial. \ud83d\udcd8 API.",source:"@site/docs/api/@thatopen/components-front/classes/ClipEdges.md",sourceDirName:"api/@thatopen/components-front/classes",slug:"/api/@thatopen/components-front/classes/ClipEdges",permalink:"/api/@thatopen/components-front/classes/ClipEdges",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CivilRaycaster",permalink:"/api/@thatopen/components-front/classes/CivilRaycaster"},next:{title:"ClipStyler",permalink:"/api/@thatopen/components-front/classes/ClipStyler"}},o={},c=[{value:"Implements",id:"implements",level:2},{value:"Properties",id:"properties",level:2},{value:"plane",id:"plane",level:3},{value:"three",id:"three",level:3},{value:"world",id:"world",level:3},{value:"Accessors",id:"accessors",level:2},{value:"visible",id:"visible",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Methods",id:"methods",level:2},{value:"dispose()",id:"dispose",level:3},{value:"Returns",id:"returns",level:4},{value:"Implementation of",id:"implementation-of",level:4},{value:"update()",id:"update",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4}];function h(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.h1,{id:"clipedges",children:"ClipEdges"}),"\n",(0,l.jsxs)(s.p,{children:["The ",(0,l.jsx)(s.code,{children:"ClipEdges"})," class is responsible for managing and rendering clipped edges and fills in a ThreeJS scene based on specified styles and models. \ud83d\udcd5 ",(0,l.jsx)(s.a,{href:"https://docs.thatopen.com/Tutorials/Components/Front/ClipStyler",children:"Tutorial"}),". \ud83d\udcd8 ",(0,l.jsx)(s.a,{href:"https://docs.thatopen.com/api/@thatopen/components-front/classes/ClipEdges",children:"API"}),"."]}),"\n",(0,l.jsx)(s.h2,{id:"implements",children:"Implements"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.code,{children:"Disposable_2"})}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsx)(s.h3,{id:"plane",children:"plane"}),"\n",(0,l.jsxs)(s.blockquote,{children:["\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"readonly"})," ",(0,l.jsx)(s.strong,{children:"plane"}),": ",(0,l.jsx)(s.code,{children:"Plane"})]}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"A readonly property representing the ThreeJS plane used to created the edges and fills."}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"three",children:"three"}),"\n",(0,l.jsxs)(s.blockquote,{children:["\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"readonly"})," ",(0,l.jsx)(s.strong,{children:"three"}),": ",(0,l.jsx)(s.code,{children:"Group"}),"<",(0,l.jsx)(s.code,{children:"Object3DEventMap"}),">"]}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"The ThreeJS group that holds all the edges and fills together"}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"world",children:"world"}),"\n",(0,l.jsxs)(s.blockquote,{children:["\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"world"}),": ",(0,l.jsx)(s.code,{children:"null"})," | ",(0,l.jsx)(s.code,{children:"World"})," = ",(0,l.jsx)(s.code,{children:"null"})]}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"The world in which the edges and fills will be placed."}),"\n",(0,l.jsx)(s.h2,{id:"accessors",children:"Accessors"}),"\n",(0,l.jsx)(s.h3,{id:"visible",children:"visible"}),"\n",(0,l.jsxs)(s.blockquote,{children:["\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"set"})," ",(0,l.jsx)(s.strong,{children:"visible"}),"(",(0,l.jsx)(s.code,{children:"value"}),"): ",(0,l.jsx)(s.code,{children:"void"})]}),"\n"]}),"\n",(0,l.jsxs)(s.p,{children:["Sets the visibility of the object in the scene.\r\nWhen set to ",(0,l.jsx)(s.code,{children:"true"}),", the object is added to the scene if the ",(0,l.jsx)(s.code,{children:"world"})," property is defined.\r\nWhen set to ",(0,l.jsx)(s.code,{children:"false"}),", the object is removed from its parent."]}),"\n",(0,l.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(s.table,{children:[(0,l.jsx)(s.thead,{children:(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(s.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(s.tbody,{children:(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.code,{children:"value"})}),(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.code,{children:"boolean"})})]})})]}),"\n",(0,l.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(s.h3,{id:"dispose",children:"dispose()"}),"\n",(0,l.jsxs)(s.blockquote,{children:["\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"dispose"}),"(): ",(0,l.jsx)(s.code,{children:"void"})]}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"OBC.Disposable.dispose"}),"\n",(0,l.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,l.jsx)(s.p,{children:(0,l.jsx)(s.code,{children:"void"})}),"\n",(0,l.jsx)(s.h4,{id:"implementation-of",children:"Implementation of"}),"\n",(0,l.jsx)(s.p,{children:(0,l.jsx)(s.code,{children:"OBC.Disposable.dispose"})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"update",children:"update()"}),"\n",(0,l.jsxs)(s.blockquote,{children:["\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"update"}),"(",(0,l.jsx)(s.code,{children:"groups"}),"?): ",(0,l.jsx)(s.code,{children:"Promise"}),"<",(0,l.jsx)(s.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"Updates the clip edges based on the provided groups and their associated styles and data.\r\nIf no groups are specified, all items will be updated."}),"\n",(0,l.jsx)(s.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,l.jsxs)(s.table,{children:[(0,l.jsx)(s.thead,{children:(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(s.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(s.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(s.tbody,{children:(0,l.jsxs)(s.tr,{children:[(0,l.jsxs)(s.td,{style:{textAlign:"left"},children:[(0,l.jsx)(s.code,{children:"groups"}),"?"]}),(0,l.jsxs)(s.td,{style:{textAlign:"left"},children:[(0,l.jsx)(s.code,{children:"string"}),"[]"]}),(0,l.jsx)(s.td,{style:{textAlign:"left"},children:"An optional array of group names to filter which items should be updated."})]})})]}),"\n",(0,l.jsx)(s.h4,{id:"returns-1",children:"Returns"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"Promise"}),"<",(0,l.jsx)(s.code,{children:"void"}),">"]}),"\n",(0,l.jsx)(s.p,{children:"A promise that resolves when the update process is complete."})]})}function a(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>r});var l=n(6540);const t={},i=l.createContext(t);function d(e){const s=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),l.createElement(i.Provider,{value:s},e.children)}}}]);