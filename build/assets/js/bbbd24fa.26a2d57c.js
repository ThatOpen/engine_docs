"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[1352],{5643:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var s=n(4848),i=n(8453);const r={},c="IDSSpecification",l={id:"api/@thatopen/components/classes/IDSSpecification",title:"IDSSpecification",description:"Represents a single specification from the Information Delivery Specification (IDS) standard.",source:"@site/docs/api/@thatopen/components/classes/IDSSpecification.md",sourceDirName:"api/@thatopen/components/classes",slug:"/api/@thatopen/components/classes/IDSSpecification",permalink:"/api/@thatopen/components/classes/IDSSpecification",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Hider",permalink:"/api/@thatopen/components/classes/Hider"},next:{title:"IDSSpecifications",permalink:"/api/@thatopen/components/classes/IDSSpecifications"}},o={},d=[{value:"Remarks",id:"remarks",level:2},{value:"Implements",id:"implements",level:2},{value:"Methods",id:"methods",level:2},{value:"serialize()",id:"serialize",level:3},{value:"Returns",id:"returns",level:4},{value:"Remarks",id:"remarks-1",level:4},{value:"test()",id:"test",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4}];function a(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"idsspecification",children:"IDSSpecification"}),"\n",(0,s.jsx)(t.p,{children:"Represents a single specification from the Information Delivery Specification (IDS) standard."}),"\n",(0,s.jsx)(t.h2,{id:"remarks",children:"Remarks"}),"\n",(0,s.jsx)(t.p,{children:"This class provides methods for testing a model against the specification,\r\nas well as serializing the specification into XML format."}),"\n",(0,s.jsx)(t.h2,{id:"implements",children:"Implements"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"IDSSpecificationData"})}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"serialize",children:"serialize()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"serialize"}),"(): ",(0,s.jsx)(t.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Serializes the IDSSpecification instance into XML format."}),"\n",(0,s.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"string"})}),"\n",(0,s.jsx)(t.p,{children:"The XML representation of the IDSSpecification."}),"\n",(0,s.jsx)(t.h4,{id:"remarks-1",children:"Remarks"}),"\n",(0,s.jsx)(t.p,{children:"This method is not meant to be used directly. It is used by the IDSSpecifications component."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"test",children:"test()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"test"}),"(",(0,s.jsx)(t.code,{children:"modelIds"}),", ",(0,s.jsx)(t.code,{children:"config"}),"): ",(0,s.jsx)(t.code,{children:"Promise"})," <",(0,s.jsx)(t.a,{href:"/api/@thatopen/components/type-aliases/IDSCheckResult",children:(0,s.jsx)(t.code,{children:"IDSCheckResult"})}),">"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Tests the model to test against the specification's requirements."}),"\n",(0,s.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"modelIds"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"RegExp"}),"[]"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"config"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"object"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"config.skipIfFails"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"boolean"})})]})]})]}),"\n",(0,s.jsx)(t.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Promise"})," <",(0,s.jsx)(t.a,{href:"/api/@thatopen/components/type-aliases/IDSCheckResult",children:(0,s.jsx)(t.code,{children:"IDSCheckResult"})}),">"]}),"\n",(0,s.jsx)(t.p,{children:"An array representing the test results.\r\nIf no requirements are defined for the specification, an empty array is returned."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>l});var s=n(6540);const i={},r=s.createContext(i);function c(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);