"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[617],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),u=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=u(e.components);return o.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return n?o.createElement(f,s(s({ref:t},l),{},{components:n})):o.createElement(f,s({ref:t},l))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[d]="string"==typeof e?e:r,s[1]=i;for(var u=2;u<a;u++)s[u]=n[u];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8004:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var o=n(7462),r=(n(7294),n(3905));const a={},s=void 0,i={unversionedId:"Tutorials/PostproductionRenderer",id:"Tutorials/PostproductionRenderer",title:"PostproductionRenderer",description:"\ud83e\uddea Cool Post-Production Effects",source:"@site/docs/Tutorials/PostproductionRenderer.mdx",sourceDirName:"Tutorials",slug:"/Tutorials/PostproductionRenderer",permalink:"/Tutorials/PostproductionRenderer",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"OrthoPerspectiveCamera",permalink:"/Tutorials/OrthoPerspectiveCamera"},next:{title:"ScreenCuller",permalink:"/Tutorials/ScreenCuller"}},c={},u=[{value:"\ud83e\uddea Cool Post-Production Effects",id:"-cool-post-production-effects",level:3},{value:"\ud83c\udfe2 Adding Fragments",id:"-adding-fragments",level:3},{value:"\ud83c\udfac Activating the Post-Production",id:"-activating-the-post-production",level:3}],l={toc:u},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"-cool-post-production-effects"},"\ud83e\uddea Cool Post-Production Effects"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Post-production effects enrich your 3D scenes. There are several post-production effects, such as\nadding shadows, rendering outlines, adding ambient occlusion and applying bloom, that can enhance\nand make your scene look cool.\ud83c\udf79"),(0,r.kt)("admonition",{title:"First, let's set up a simple scene!",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\ud83d\udc40 If you haven't started there, check out ",(0,r.kt)("a",{parentName:"p",href:"/Tutorials/SimpleScene"},"that tutorial first"),"!")),(0,r.kt)("p",null,"In this tutorial we will use ",(0,r.kt)("strong",{parentName:"p"},"Post-Production Renderer")," to add neat ",(0,r.kt)("strong",{parentName:"p"},"Outlines")," and ",(0,r.kt)("strong",{parentName:"p"},"Ambient Occlusion")," to the 3D Model.\ud83e\uddbe"),(0,r.kt)("h3",{id:"-adding-fragments"},"\ud83c\udfe2 Adding Fragments"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"We'll start by adding a ",(0,r.kt)("strong",{parentName:"p"},"Fragment")," to our scene using Fragment Manager.\nWe'll use a simple fragment for the purposes of this tutorial, but the code is capable of handling big files as well.\ud83c\udfd7\ufe0f"),(0,r.kt)("admonition",{title:"Using Fragment Manager!",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"\ud83c\udfcb\ufe0f There is a dedicated tutorial on how to use Fragment Manager to load ",(0,r.kt)("strong",{parentName:"p"},"IFC")," files!")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const fragments = new OBC.FragmentManager(components);\nconst file = await fetch('../../../resources/small.frag');\nconst data = await file.arrayBuffer();\nconst buffer = new Uint8Array(data);\nconst model = await fragments.load(buffer);\nconst meshes = [];\nconst culler = new OBC.ScreenCuller(components);\nculler.setup();\nfor (const fragment of model.items) {\nmeshes.push(fragment.mesh);\nculler.elements.add(fragment.mesh);\n}\nculler.elements.needsUpdate = true;\nconst controls = components.camera.controls;\ncontrols.addEventListener('controlend', () => {\nculler.elements.needsUpdate = true;\n});\n")),(0,r.kt)("h3",{id:"-activating-the-post-production"},"\ud83c\udfac Activating the Post-Production"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"We will activate the post-production effect.\nAlso, we will enable the visibility for post-production layer."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"postproduction.active")," - Enable or Disable the active status of the post-processing effect"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"postproduction.visible")," - Toggle the visibility of post-processing layer that is created to display the effect.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"components.renderer.postproduction.enabled = true;\nconst postproduction = components.renderer.postproduction;\npostproduction.customEffects.excludedMeshes.push(grid.get());\nconst gui = new dat.GUI();\ngui.add(postproduction, 'enabled');\nconst guiGamma = gui.addFolder('Gamma');\nguiGamma.add(postproduction.settings, 'gamma').name(\"Gamma correction\").onChange((value) => {\npostproduction.setPasses({gamma: value});\n});\nconst guiCustomEffects = gui.addFolder('Custom effects');\nguiCustomEffects.add(postproduction.settings, 'custom').name(\"Custom effects\").onChange((value) => {\npostproduction.setPasses({custom: value});\n});\nguiCustomEffects.add(postproduction.customEffects, 'opacity').name('Line opacity').min(0).max(1).step(0.1);\nguiCustomEffects.add(postproduction.customEffects, 'tolerance').name('Line tolerance').min(0).max(6).step(1);\nguiCustomEffects.addColor(postproduction.customEffects, 'lineColor').name('Line color');\nguiCustomEffects.add(postproduction.customEffects, 'glossEnabled').name('Gloss enabled').min(0).max(2).step(0.1);\nguiCustomEffects.add(postproduction.customEffects, 'glossExponent').name('Gloss exponent').min(0).max(5).step(0.1);\nguiCustomEffects.add(postproduction.customEffects, 'maxGloss').name('Max gloss').min(-2).max(2).step(0.05);\nguiCustomEffects.add(postproduction.customEffects, 'minGloss').name('Min gloss').min(-2).max(2).step(0.05);\nconst guiAO = gui.addFolder('SAO');\nconst configuration = postproduction._n8ao.configuration;\nguiAO.add(postproduction.settings, 'ao').name(\"Ambient occlusion\").onChange((value) => {\npostproduction.setPasses({ao: value});\n});\nguiAO.add(configuration, 'aoSamples').step(1).min(1).max(16);\nguiAO.add(configuration, 'denoiseSamples').step(1).min(0).max(16);\nguiAO.add(configuration, 'denoiseRadius').step(1).min(0).max(100);\nguiAO.add(configuration, 'aoRadius').step(1).min(0).max(16);\nguiAO.add(configuration, 'distanceFalloff').step(1).min(0).max(16);\nguiAO.add(configuration, 'intensity').step(1).min(0).max(16);\nguiAO.add(configuration, 'halfRes');\nguiAO.add(configuration, 'screenSpaceRadius');\nguiAO.addColor(configuration, 'color');\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Congratulations")," \ud83c\udf89 on completing this tutorial! Now you know how to add cool effects easily using\nPost Production \ud83d\uddbc\ufe0f\nLet's keep it up and check out another tutorial! \ud83c\udf93"),(0,r.kt)("iframe",{src:"https://thatopen.github.io/engine_components/src/navigation/PostproductionRenderer/index.html"}))}p.isMDXComponent=!0}}]);