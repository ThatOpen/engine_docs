"use strict";(self.webpackChunkengine_docs=self.webpackChunkengine_docs||[]).push([[1495],{4345:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var t=r(4848),s=r(8453);const o={},i="IMarker",c={id:"api/@thatopen/components-front/interfaces/IMarker",title:"IMarker",description:"Interface representing a marker object.",source:"@site/docs/api/@thatopen/components-front/interfaces/IMarker.md",sourceDirName:"api/@thatopen/components-front/interfaces",slug:"/api/@thatopen/components-front/interfaces/IMarker",permalink:"/api/@thatopen/components-front/interfaces/IMarker",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IGroupedMarkers",permalink:"/api/@thatopen/components-front/interfaces/IGroupedMarkers"},next:{title:"@thatopen/fragments",permalink:"/api/@thatopen/fragments/"}},a={},l=[{value:"Properties",id:"properties",level:2},{value:"key",id:"key",level:3},{value:"label",id:"label",level:3},{value:"merged",id:"merged",level:3},{value:"static",id:"static",level:3},{value:"type?",id:"type",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"imarker",children:"IMarker"}),"\n",(0,t.jsx)(n.p,{children:"Interface representing a marker object."}),"\n",(0,t.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(n.h3,{id:"key",children:"key"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"key"}),": ",(0,t.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Unique identifier for the marker."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"label",children:"label"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"label"}),": ",(0,t.jsx)(n.a,{href:"/api/@thatopen/components-front/classes/Mark",children:(0,t.jsx)(n.code,{children:"Mark"})})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Label of the marker."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"merged",children:"merged"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"merged"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Indicates whether the marker is merged with other markers."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"static",children:"static"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"static"}),": ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Indicates whether the marker is static and should not be clustered."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"type",children:"type?"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optional"})," ",(0,t.jsx)(n.strong,{children:"type"}),": ",(0,t.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Optional type of the marker."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var t=r(6540);const s={},o=t.createContext(s);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);